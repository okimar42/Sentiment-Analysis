from typing import Any, AsyncIterator, Awaitable, Callable, Optional

class ClientTimeout: ...
class FormData: ...

class _BaseResponse:
    status: int
    headers: Any
    async def text(self) -> str: ...
    async def json(self) -> Any: ...

class ClientResponse(_BaseResponse): ...

class ClientSession:
    async def __aenter__(self) -> "ClientSession": ...
    async def __aexit__(self, exc_type: Any, exc: Any, tb: Any) -> None: ...
    async def get(self, url: str, *args: Any, **kwargs: Any) -> ClientResponse: ...
    async def post(self, url: str, *args: Any, **kwargs: Any) -> ClientResponse: ...
    async def put(self, url: str, *args: Any, **kwargs: Any) -> ClientResponse: ...
    async def delete(self, url: str, *args: Any, **kwargs: Any) -> ClientResponse: ...
    async def close(self) -> None: ...

__all__ = [
    "ClientSession",
    "ClientTimeout",
    "FormData",
    "ClientResponse",
]